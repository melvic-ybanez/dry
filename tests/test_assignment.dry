def test_associativity() {
    let a = "a";
    let b = "b";
    let c = "c";

    // assignment is right-associative
    a = b = c;
    assert_equals("a is equal to c", a, c);
    assert_equals("b is equal to c", b, c);
    assert_equals("c is equal to c", c, c);
}

def test_rhs() {
    let a = "before";
    let c = a = "after";

    assert_equals("a = 'after'", a, "after");
    assert_equals("c = 'after'", c, "after");
}

def test_lhs() {
    assert_error("rhs should not be an undefined variable", Errors.UNDEFINED_VARIABLE,
            lambda() { unknown = "what"; });
}

test_associativity();
test_rhs();
test_lhs();

// global
let a = "before";
assert_equals("a = 'before'", a, "before");
a = "after";
assert_equals("a = 'after'", a, "after");

// local
{
    let a = "before";
    assert_equals("a = 'before'", a, "before");

    a = "after";
    assert_equals("a = 'after'", a, "after");

    assert_equals("a = 'arg'", a = "arg", "arg");
    assert_equals("a = 'arg'", a, "arg");
}