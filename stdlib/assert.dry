def assert_true(description, condition) {
    assert_true_with_message(description, condition, str(condition) + " is not true");
}

def assert_false(description, condition) {
    assert_true_with_message(description, !condition, str(condition) + " is not false");
}

def assert_equals(description, expected, got) {
    assert_true_with_message(description,
            expected == got,
            "Expected: " + str(expected) + ". Got: " + str(got));
}

def assert_error(description, expected_error, code) {
    try {
        code();
    } catch (error:) {
        assert_equals(description, expected_error, error);
    }
}

def assert_error_type(description, expected_error_type, code) {
    try {
        code();
    } catch (error:) {
        assert_equals(description, error.__kind__, error.__kind__);
    }
}